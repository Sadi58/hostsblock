#!/usr/bin/env python
import gtk
import appindicator
import os
import commands
import gtk
import sys

class HostsBlockIndicator:
    def __init__(self):
	self.ind = appindicator.Indicator("HostsBlockIndicator",
                                           "indicator-messages",
                                           appindicator.CATEGORY_APPLICATION_STATUS)
	self.ind.set_status(appindicator.STATUS_ACTIVE)
	self.ind.set_attention_icon("indicator-messages-new")
	self.ind.set_icon_theme_path("/usr/share/indicator-hostsblock/")
	self.ind.set_icon("hostsblock")
        self.menu_setup()
        self.ind.set_menu(self.menu)
    def menu_setup(self):
        self.menu = gtk.Menu()

	self.AutoRefresh_item = gtk.MenuItem(self.AutoRefresh())
	self.AutoRefresh_item.set_sensitive(False)

	self.infoHostsBlockAuto_item = gtk.MenuItem(self.infoHostsBlockAuto())
	self.infoHostsBlockAuto_item.set_sensitive(False)
	self.infoHostsBlockAuto_item.show()

	self.infoHostsBlockLast_item = gtk.MenuItem(self.infoHostsBlockLast())
	self.infoHostsBlockLast_item.set_sensitive(False)
	self.infoHostsBlockLast_item.show()

	self.seperator1_item = gtk.SeparatorMenuItem()
	self.seperator1_item.show()

	self.Launch_item = gtk.MenuItem("Launch HostsBlock")
        self.Launch_item.connect("activate", self.doLaunch)
        self.Launch_item.show()

	self.Schedule_item = gtk.MenuItem("Manage Auto-Updates...")
        self.Schedule_item.connect("activate", self.setSchedule)
        self.Schedule_item.show()

	self.seperator2_item = gtk.SeparatorMenuItem()
	self.seperator2_item.show()

	self.Block_item = gtk.MenuItem("View Hosts.Block File")
        self.Block_item.connect("activate", self.doBlock)
        self.Block_item.show()

	self.Log_item = gtk.MenuItem("View Log")
        self.Log_item.connect("activate", self.doLog)
        self.Log_item.show()

	self.History_item = gtk.MenuItem("View History")
        self.History_item.connect("activate", self.doHistory)
        self.History_item.show()

	self.View_item = gtk.MenuItem("View Config Files...")
        self.View_item.connect("activate", self.doView)
        self.View_item.show()

	self.seperator3_item = gtk.SeparatorMenuItem()
	self.seperator3_item.show()

	self.QueryHB_item = gtk.MenuItem("Query Hosts.Block File...")
        self.QueryHB_item.connect("activate", self.doQueryHB)
        self.QueryHB_item.show()

	self.QueryCF_item = gtk.MenuItem("Query Cache Files...")
        self.QueryCF_item.connect("activate", self.doQueryCF)
        self.QueryCF_item.show()

	self.seperator4_item = gtk.SeparatorMenuItem()
	self.seperator4_item.show()

	self.Edit_item = gtk.MenuItem("Edit Config Files...")
        self.Edit_item.connect("activate", self.doEdit)
        self.Edit_item.show()

	self.EditUser_item = gtk.MenuItem("Edit User Lists...")
        self.EditUser_item.connect("activate", self.doEditUser)
        self.EditUser_item.show()

	self.MergeUser_item = gtk.MenuItem("Merge User Lists...")
        self.MergeUser_item.connect("activate", self.doMergeUser)
        self.MergeUser_item.show()

	self.seperator5_item = gtk.SeparatorMenuItem()
	self.seperator5_item.show()

	self.Disable_item = gtk.MenuItem("Disable HostsBlock")
        self.Disable_item.connect("activate", self.doDisable)
        self.Disable_item.show()

	self.Enable_item = gtk.MenuItem("Re-Enable HostsBlock")
        self.Enable_item.connect("activate", self.doEnable)
        self.Enable_item.show()

	self.Restart_item = gtk.MenuItem("Restart DNSmasq")
        self.Restart_item.connect("activate", self.doRestart)
        self.Restart_item.show()

	self.seperator6_item = gtk.SeparatorMenuItem()
	self.seperator6_item.show()

	self.Icon_item = gtk.MenuItem("Change Icon...")
        self.Icon_item.connect("activate", self.setIcon)
        self.Icon_item.show()

	self.seperator7_item = gtk.SeparatorMenuItem()
	self.seperator7_item.show()

	self.Refresh_item = gtk.MenuItem("Refresh")
        self.Refresh_item.connect("activate", self.doRefresh)
        self.Refresh_item.show()

	self.Quit_item = gtk.MenuItem("Quit")
        self.Quit_item.connect("activate", self.doQuit)
        self.Quit_item.show()

	self.menu.append(self.infoHostsBlockAuto_item)
	self.menu.append(self.infoHostsBlockLast_item)
	self.menu.append(self.seperator1_item)
	self.menu.append(self.Launch_item)
	self.menu.append(self.Schedule_item)
	self.menu.append(self.seperator2_item)
	self.menu.append(self.Block_item)
	self.menu.append(self.Log_item)
	self.menu.append(self.History_item)
	self.menu.append(self.View_item)
	self.menu.append(self.seperator3_item)
	self.menu.append(self.QueryHB_item)
	self.menu.append(self.QueryCF_item)
	self.menu.append(self.seperator4_item)
	self.menu.append(self.Edit_item)
	self.menu.append(self.EditUser_item)
	self.menu.append(self.MergeUser_item)
	self.menu.append(self.seperator5_item)
	self.menu.append(self.Disable_item)
	self.menu.append(self.Enable_item)
	self.menu.append(self.Restart_item)
	self.menu.append(self.seperator6_item)
	self.menu.append(self.Icon_item)
	self.menu.append(self.seperator7_item)
	self.menu.append(self.Refresh_item)
	self.menu.append(self.Quit_item)

    def AutoRefresh(self):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator auto_refresh &")

    def infoHostsBlockAuto(self):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator status_auto_update")
	stat, out = commands.getstatusoutput("/usr/share/indicator-hostsblock/hostsblock-indicator status_auto_update")
	return out

    def infoHostsBlockLast(self):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator status_last_update")
	stat, out = commands.getstatusoutput("/usr/share/indicator-hostsblock/hostsblock-indicator status_last_update")
	return out

    def doLaunch(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator launcher_gui")

    def setSchedule(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator scheduler_gui")

    def doBlock(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator view_hostsblock_gui")

    def doLog(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator view_log_gui")

    def doHistory(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator view_history_log_gui")

    def doView(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator viewer_gui")

    def doQueryHB(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator query_hostsblock_gui")

    def doQueryCF(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator query_cache_gui")

    def doEdit(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator editor_gui")

    def doEditUser(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator edit_user_gui")

    def doMergeUser(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator merge_user_gui")

    def doDisable(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator disable_hostsblock")

    def doEnable(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator enable_hostsblock")

    def doRestart(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator restart_dnsmasq")

    def setIcon(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator change_icon_gui")

    def doRefresh(self, dude):
	os.system("/usr/share/indicator-hostsblock/hostsblock-indicator restart_indicator")

    def doQuit(self, dude):
	os.system("pkill -f 'inotifywait -qqre modify /usr/share/indicator-hostsblock/' & killall 'hostsblock-indicator' & pkill -f 'python /usr/share/indicator-hostsblock/indicator-hostsblock'")

    def ignore(*args):
	return gtk.TRUE

    def main(self):
        gtk.main()

if __name__ == "__main__":
    indicator = HostsBlockIndicator()
    indicator.main()
