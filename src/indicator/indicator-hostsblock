#!/usr/bin/env python
import gtk
import appindicator
import os
import commands
import gtk
import sys

class HostsBlockIndicator:
    def __init__(self):
	self.ind = appindicator.Indicator("HostsBlockIndicator",
                                           "indicator-messages",
                                           appindicator.CATEGORY_APPLICATION_STATUS)
	self.ind.set_status(appindicator.STATUS_ACTIVE)
	self.ind.set_attention_icon("indicator-messages-new")
	self.ind.set_icon_theme_path("/usr/local/indicator-hostsblock/")
	self.ind.set_icon('hostsblock')
        self.menu_setup()
        self.ind.set_menu(self.menu)
    def menu_setup(self):
        self.menu = gtk.Menu()

	self.infoHostsBlockAuto_item = gtk.MenuItem(self.infoHostsBlockAuto())
	self.infoHostsBlockAuto_item.set_sensitive(False)
	self.infoHostsBlockAuto_item.show()

	self.infoHostsBlockLast_item = gtk.MenuItem(self.infoHostsBlockLast())
	self.infoHostsBlockLast_item.set_sensitive(False)
	self.infoHostsBlockLast_item.show()

	self.seperator1_item = gtk.SeparatorMenuItem()
	self.seperator1_item.show()

	self.Launch_item = gtk.MenuItem("Launch HostsBlock")
        self.Launch_item.connect("activate", self.doLaunch)
        self.Launch_item.show()

	self.Schedule_item = gtk.MenuItem("Manage Updates")
        self.Schedule_item.connect("activate", self.setSchedule)
        self.Schedule_item.show()

	self.Log_item = gtk.MenuItem("View Log File")
        self.Log_item.connect("activate", self.doLog)
        self.Log_item.show()

	self.View_item = gtk.MenuItem("View Config Files")
        self.View_item.connect("activate", self.doView)
        self.View_item.show()

	self.Edit_item = gtk.MenuItem("Edit Config Files")
        self.Edit_item.connect("activate", self.doEdit)
        self.Edit_item.show()

	self.seperator2_item = gtk.SeparatorMenuItem()
	self.seperator2_item.show()

	self.Disable_item = gtk.MenuItem("Disable HostsBlock")
        self.Disable_item.connect("activate", self.doDisable)
        self.Disable_item.show()

	self.Enable_item = gtk.MenuItem("Re-enable HostsBlock")
        self.Enable_item.connect("activate", self.doEnable)
        self.Enable_item.show()

	self.Restart_item = gtk.MenuItem("Restart DNSmasq")
        self.Restart_item.connect("activate", self.doRestart)
        self.Restart_item.show()

	self.seperator3_item = gtk.SeparatorMenuItem()
	self.seperator3_item.show()

	self.Icon_item = gtk.MenuItem("Change indicator icon")
        self.Icon_item.connect("activate", self.setIcon)
        self.Icon_item.show()

	self.seperator4_item = gtk.SeparatorMenuItem()
	self.seperator4_item.show()

	self.Refresh_item = gtk.MenuItem("Refresh indicator")
        self.Refresh_item.connect("activate", self.doRefresh)
        self.Refresh_item.show()

	self.menu.append(self.infoHostsBlockAuto_item)
	self.menu.append(self.infoHostsBlockLast_item)
	self.menu.append(self.seperator1_item)
	self.menu.append(self.Launch_item)
	self.menu.append(self.Schedule_item)
	self.menu.append(self.Log_item)
	self.menu.append(self.View_item)
	self.menu.append(self.Edit_item)
	self.menu.append(self.seperator2_item)
	self.menu.append(self.Disable_item)
	self.menu.append(self.Enable_item)
	self.menu.append(self.Restart_item)
	self.menu.append(self.seperator3_item)
	self.menu.append(self.Icon_item)
	self.menu.append(self.seperator4_item)
	self.menu.append(self.Refresh_item)

    def infoHostsBlockAuto(self):
	os.system("/usr/local/indicator-hostsblock/status_auto-update")
	stat, out = commands.getstatusoutput("/usr/local/indicator-hostsblock/status_auto-update")
	return out

    def infoHostsBlockLast(self):
	os.system("/usr/local/indicator-hostsblock/status_last-update")
	stat, out = commands.getstatusoutput("/usr/local/indicator-hostsblock/status_last-update")
	return out

    def doLaunch(self, dude):
	os.system("/usr/local/indicator-hostsblock/launcher-gui")

    def setSchedule(self, dude):
	os.system("/usr/local/indicator-hostsblock/scheduler-gui")

    def doLog(self, dude):
	os.system("zenity --text-info --filename=/var/log/hostsblock.log --title=\"hostsblock.log (view only)\" --width 680 --height 580")

    def doView(self, dude):
	os.system("/usr/local/indicator-hostsblock/viewer-gui")

    def doEdit(self, dude):
	os.system("/usr/local/indicator-hostsblock/editor-gui")

    def doDisable(self, dude):
	os.system("/usr/local/indicator-hostsblock/disable-hostsblock")

    def doEnable(self, dude):
	os.system("/usr/local/indicator-hostsblock/enable-hostsblock")

    def doRestart(self, dude):
	os.system("/usr/local/indicator-hostsblock/restart-dnsmasq")

    def setIcon(self, dude):
	os.system("/usr/local/indicator-hostsblock/change-icon-gui")

    def doRefresh(self, dude):
	os.system("/usr/local/indicator-hostsblock/restart-indicator")

    def ignore(*args):
	return gtk.TRUE

    def main(self):
        gtk.main()

if __name__ == "__main__":
    indicator = HostsBlockIndicator()
    indicator.main()
